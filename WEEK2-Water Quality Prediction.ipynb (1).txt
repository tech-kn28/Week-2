{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "56a492f6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Load libraries \n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "from sklearn.impute import SimpleImputer\n",
    "from sklearn.multioutput import MultiOutputRegressor\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_squared_error, r2_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "7fffa8ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>NH4</th>\n",
       "      <th>BSK5</th>\n",
       "      <th>Suspended</th>\n",
       "      <th>O2</th>\n",
       "      <th>NO3</th>\n",
       "      <th>NO2</th>\n",
       "      <th>SO4</th>\n",
       "      <th>PO4</th>\n",
       "      <th>CL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>17.02.2000</td>\n",
       "      <td>0.330</td>\n",
       "      <td>2.77</td>\n",
       "      <td>12.0</td>\n",
       "      <td>12.30</td>\n",
       "      <td>9.50</td>\n",
       "      <td>0.057</td>\n",
       "      <td>154.0</td>\n",
       "      <td>0.454</td>\n",
       "      <td>289.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>11.05.2000</td>\n",
       "      <td>0.044</td>\n",
       "      <td>3.00</td>\n",
       "      <td>51.6</td>\n",
       "      <td>14.61</td>\n",
       "      <td>17.75</td>\n",
       "      <td>0.034</td>\n",
       "      <td>352.0</td>\n",
       "      <td>0.090</td>\n",
       "      <td>1792.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>11.09.2000</td>\n",
       "      <td>0.032</td>\n",
       "      <td>2.10</td>\n",
       "      <td>24.5</td>\n",
       "      <td>9.87</td>\n",
       "      <td>13.80</td>\n",
       "      <td>0.173</td>\n",
       "      <td>416.0</td>\n",
       "      <td>0.200</td>\n",
       "      <td>2509.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>13.12.2000</td>\n",
       "      <td>0.170</td>\n",
       "      <td>2.23</td>\n",
       "      <td>35.6</td>\n",
       "      <td>12.40</td>\n",
       "      <td>17.13</td>\n",
       "      <td>0.099</td>\n",
       "      <td>275.2</td>\n",
       "      <td>0.377</td>\n",
       "      <td>1264.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>02.03.2001</td>\n",
       "      <td>0.000</td>\n",
       "      <td>3.03</td>\n",
       "      <td>48.8</td>\n",
       "      <td>14.69</td>\n",
       "      <td>10.00</td>\n",
       "      <td>0.065</td>\n",
       "      <td>281.6</td>\n",
       "      <td>0.134</td>\n",
       "      <td>1462.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id        date    NH4  BSK5  Suspended     O2    NO3    NO2    SO4    PO4  \\\n",
       "0   1  17.02.2000  0.330  2.77       12.0  12.30   9.50  0.057  154.0  0.454   \n",
       "1   1  11.05.2000  0.044  3.00       51.6  14.61  17.75  0.034  352.0  0.090   \n",
       "2   1  11.09.2000  0.032  2.10       24.5   9.87  13.80  0.173  416.0  0.200   \n",
       "3   1  13.12.2000  0.170  2.23       35.6  12.40  17.13  0.099  275.2  0.377   \n",
       "4   1  02.03.2001  0.000  3.03       48.8  14.69  10.00  0.065  281.6  0.134   \n",
       "\n",
       "       CL  \n",
       "0   289.5  \n",
       "1  1792.0  \n",
       "2  2509.0  \n",
       "3  1264.0  \n",
       "4  1462.0  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.read_csv(\"PB_All_2000_2021.csv\", sep=';')\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "776a1ccb",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2861 entries, 0 to 2860\n",
      "Data columns (total 11 columns):\n",
      " #   Column     Non-Null Count  Dtype  \n",
      "---  ------     --------------  -----  \n",
      " 0   id         2861 non-null   int64  \n",
      " 1   date       2861 non-null   object \n",
      " 2   NH4        2858 non-null   float64\n",
      " 3   BSK5       2860 non-null   float64\n",
      " 4   Suspended  2845 non-null   float64\n",
      " 5   O2         2858 non-null   float64\n",
      " 6   NO3        2860 non-null   float64\n",
      " 7   NO2        2858 non-null   float64\n",
      " 8   SO4        2812 non-null   float64\n",
      " 9   PO4        2833 non-null   float64\n",
      " 10  CL         2812 non-null   float64\n",
      "dtypes: float64(9), int64(1), object(1)\n",
      "memory usage: 246.0+ KB\n"
     ]
    }
   ],
   "source": [
    "#Information about the dataset\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "70fb3735",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2861, 11)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Number of rows and columns in dataset\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0b422ed6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>NH4</th>\n",
       "      <th>BSK5</th>\n",
       "      <th>Suspended</th>\n",
       "      <th>O2</th>\n",
       "      <th>NO3</th>\n",
       "      <th>NO2</th>\n",
       "      <th>SO4</th>\n",
       "      <th>PO4</th>\n",
       "      <th>CL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2861.000000</td>\n",
       "      <td>2858.000000</td>\n",
       "      <td>2860.000000</td>\n",
       "      <td>2845.000000</td>\n",
       "      <td>2858.000000</td>\n",
       "      <td>2860.000000</td>\n",
       "      <td>2858.000000</td>\n",
       "      <td>2812.000000</td>\n",
       "      <td>2833.000000</td>\n",
       "      <td>2812.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>12.397064</td>\n",
       "      <td>0.758734</td>\n",
       "      <td>4.316182</td>\n",
       "      <td>12.931905</td>\n",
       "      <td>9.508902</td>\n",
       "      <td>4.316846</td>\n",
       "      <td>0.246128</td>\n",
       "      <td>59.362313</td>\n",
       "      <td>0.418626</td>\n",
       "      <td>93.731991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>6.084226</td>\n",
       "      <td>2.486247</td>\n",
       "      <td>2.973997</td>\n",
       "      <td>16.543097</td>\n",
       "      <td>4.428260</td>\n",
       "      <td>6.881188</td>\n",
       "      <td>2.182777</td>\n",
       "      <td>96.582641</td>\n",
       "      <td>0.771326</td>\n",
       "      <td>394.512184</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.020000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>8.000000</td>\n",
       "      <td>0.080000</td>\n",
       "      <td>2.160000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>7.092500</td>\n",
       "      <td>1.390000</td>\n",
       "      <td>0.030000</td>\n",
       "      <td>27.052500</td>\n",
       "      <td>0.130000</td>\n",
       "      <td>26.800000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>14.000000</td>\n",
       "      <td>0.220000</td>\n",
       "      <td>3.800000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>8.995000</td>\n",
       "      <td>2.800000</td>\n",
       "      <td>0.059000</td>\n",
       "      <td>37.800000</td>\n",
       "      <td>0.270000</td>\n",
       "      <td>33.900000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>16.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>5.800000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>11.520000</td>\n",
       "      <td>5.582500</td>\n",
       "      <td>0.125750</td>\n",
       "      <td>64.640000</td>\n",
       "      <td>0.470000</td>\n",
       "      <td>45.607500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>22.000000</td>\n",
       "      <td>39.427000</td>\n",
       "      <td>50.900000</td>\n",
       "      <td>595.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>133.400000</td>\n",
       "      <td>109.000000</td>\n",
       "      <td>3573.400000</td>\n",
       "      <td>13.879000</td>\n",
       "      <td>5615.280000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                id          NH4         BSK5    Suspended           O2  \\\n",
       "count  2861.000000  2858.000000  2860.000000  2845.000000  2858.000000   \n",
       "mean     12.397064     0.758734     4.316182    12.931905     9.508902   \n",
       "std       6.084226     2.486247     2.973997    16.543097     4.428260   \n",
       "min       1.000000     0.000000     0.000000     0.000000     0.000000   \n",
       "25%       8.000000     0.080000     2.160000     6.000000     7.092500   \n",
       "50%      14.000000     0.220000     3.800000    10.000000     8.995000   \n",
       "75%      16.000000     0.500000     5.800000    15.000000    11.520000   \n",
       "max      22.000000    39.427000    50.900000   595.000000    90.000000   \n",
       "\n",
       "               NO3          NO2          SO4          PO4           CL  \n",
       "count  2860.000000  2858.000000  2812.000000  2833.000000  2812.000000  \n",
       "mean      4.316846     0.246128    59.362313     0.418626    93.731991  \n",
       "std       6.881188     2.182777    96.582641     0.771326   394.512184  \n",
       "min       0.000000     0.000000     0.000000     0.000000     0.020000  \n",
       "25%       1.390000     0.030000    27.052500     0.130000    26.800000  \n",
       "50%       2.800000     0.059000    37.800000     0.270000    33.900000  \n",
       "75%       5.582500     0.125750    64.640000     0.470000    45.607500  \n",
       "max     133.400000   109.000000  3573.400000    13.879000  5615.280000  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Statistics of the dataset\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "386dca80",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id            0\n",
       "date          0\n",
       "NH4           3\n",
       "BSK5          1\n",
       "Suspended    16\n",
       "O2            3\n",
       "NO3           1\n",
       "NO2           3\n",
       "SO4          49\n",
       "PO4          28\n",
       "CL           49\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Checking the null values\n",
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "2ff12508",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Visualization: Missing Values Heatmap\n",
    "plt.figure(figsize=(12, 6))\n",
    "sns.heatmap(df.isnull(), cbar=False, cmap='viridis')\n",
    "plt.title(\"Missing Values Heatmap\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "894b73ab",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Select numeric columns with missing values\n",
    "cols_with_missing = ['NH4', 'BSK5', 'Suspended', 'O2', 'NO3', 'NO2', 'SO4', 'PO4', 'CL']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "29c5e653",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Initialize the imputer with strategy as 'mean'\n",
    "imputer = SimpleImputer(strategy='mean')\n",
    "\n",
    "# Fit and transform the selected columns\n",
    "df[cols_with_missing] = imputer.fit_transform(df[cols_with_missing])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ba881bb9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id           0\n",
       "date         0\n",
       "NH4          0\n",
       "BSK5         0\n",
       "Suspended    0\n",
       "O2           0\n",
       "NO3          0\n",
       "NO2          0\n",
       "SO4          0\n",
       "PO4          0\n",
       "CL           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "c84aeadf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>NH4</th>\n",
       "      <th>BSK5</th>\n",
       "      <th>Suspended</th>\n",
       "      <th>O2</th>\n",
       "      <th>NO3</th>\n",
       "      <th>NO2</th>\n",
       "      <th>SO4</th>\n",
       "      <th>PO4</th>\n",
       "      <th>CL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2000-02-17</td>\n",
       "      <td>0.330</td>\n",
       "      <td>2.77</td>\n",
       "      <td>12.0</td>\n",
       "      <td>12.30</td>\n",
       "      <td>9.50</td>\n",
       "      <td>0.057</td>\n",
       "      <td>154.0</td>\n",
       "      <td>0.454</td>\n",
       "      <td>289.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2000-05-11</td>\n",
       "      <td>0.044</td>\n",
       "      <td>3.00</td>\n",
       "      <td>51.6</td>\n",
       "      <td>14.61</td>\n",
       "      <td>17.75</td>\n",
       "      <td>0.034</td>\n",
       "      <td>352.0</td>\n",
       "      <td>0.090</td>\n",
       "      <td>1792.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2000-09-11</td>\n",
       "      <td>0.032</td>\n",
       "      <td>2.10</td>\n",
       "      <td>24.5</td>\n",
       "      <td>9.87</td>\n",
       "      <td>13.80</td>\n",
       "      <td>0.173</td>\n",
       "      <td>416.0</td>\n",
       "      <td>0.200</td>\n",
       "      <td>2509.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2000-12-13</td>\n",
       "      <td>0.170</td>\n",
       "      <td>2.23</td>\n",
       "      <td>35.6</td>\n",
       "      <td>12.40</td>\n",
       "      <td>17.13</td>\n",
       "      <td>0.099</td>\n",
       "      <td>275.2</td>\n",
       "      <td>0.377</td>\n",
       "      <td>1264.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2001-03-02</td>\n",
       "      <td>0.000</td>\n",
       "      <td>3.03</td>\n",
       "      <td>48.8</td>\n",
       "      <td>14.69</td>\n",
       "      <td>10.00</td>\n",
       "      <td>0.065</td>\n",
       "      <td>281.6</td>\n",
       "      <td>0.134</td>\n",
       "      <td>1462.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id       date    NH4  BSK5  Suspended     O2    NO3    NO2    SO4    PO4  \\\n",
       "0   1 2000-02-17  0.330  2.77       12.0  12.30   9.50  0.057  154.0  0.454   \n",
       "1   1 2000-05-11  0.044  3.00       51.6  14.61  17.75  0.034  352.0  0.090   \n",
       "2   1 2000-09-11  0.032  2.10       24.5   9.87  13.80  0.173  416.0  0.200   \n",
       "3   1 2000-12-13  0.170  2.23       35.6  12.40  17.13  0.099  275.2  0.377   \n",
       "4   1 2001-03-02  0.000  3.03       48.8  14.69  10.00  0.065  281.6  0.134   \n",
       "\n",
       "       CL  \n",
       "0   289.5  \n",
       "1  1792.0  \n",
       "2  2509.0  \n",
       "3  1264.0  \n",
       "4  1462.0  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#data is in object formate- date format\n",
    "df['date'] = pd.to_datetime(df['date'], format='%d.%m.%Y')\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "5c5a75f7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2861 entries, 0 to 2860\n",
      "Data columns (total 11 columns):\n",
      " #   Column     Non-Null Count  Dtype         \n",
      "---  ------     --------------  -----         \n",
      " 0   id         2861 non-null   int64         \n",
      " 1   date       2861 non-null   datetime64[ns]\n",
      " 2   NH4        2861 non-null   float64       \n",
      " 3   BSK5       2861 non-null   float64       \n",
      " 4   Suspended  2861 non-null   float64       \n",
      " 5   O2         2861 non-null   float64       \n",
      " 6   NO3        2861 non-null   float64       \n",
      " 7   NO2        2861 non-null   float64       \n",
      " 8   SO4        2861 non-null   float64       \n",
      " 9   PO4        2861 non-null   float64       \n",
      " 10  CL         2861 non-null   float64       \n",
      "dtypes: datetime64[ns](1), float64(9), int64(1)\n",
      "memory usage: 246.0 KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "7411946c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>NH4</th>\n",
       "      <th>BSK5</th>\n",
       "      <th>Suspended</th>\n",
       "      <th>O2</th>\n",
       "      <th>NO3</th>\n",
       "      <th>NO2</th>\n",
       "      <th>SO4</th>\n",
       "      <th>PO4</th>\n",
       "      <th>CL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2000-02-17</td>\n",
       "      <td>0.330</td>\n",
       "      <td>2.77</td>\n",
       "      <td>12.0</td>\n",
       "      <td>12.30</td>\n",
       "      <td>9.50</td>\n",
       "      <td>0.057</td>\n",
       "      <td>154.0</td>\n",
       "      <td>0.454</td>\n",
       "      <td>289.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2000-05-11</td>\n",
       "      <td>0.044</td>\n",
       "      <td>3.00</td>\n",
       "      <td>51.6</td>\n",
       "      <td>14.61</td>\n",
       "      <td>17.75</td>\n",
       "      <td>0.034</td>\n",
       "      <td>352.0</td>\n",
       "      <td>0.090</td>\n",
       "      <td>1792.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2000-09-11</td>\n",
       "      <td>0.032</td>\n",
       "      <td>2.10</td>\n",
       "      <td>24.5</td>\n",
       "      <td>9.87</td>\n",
       "      <td>13.80</td>\n",
       "      <td>0.173</td>\n",
       "      <td>416.0</td>\n",
       "      <td>0.200</td>\n",
       "      <td>2509.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2000-12-13</td>\n",
       "      <td>0.170</td>\n",
       "      <td>2.23</td>\n",
       "      <td>35.6</td>\n",
       "      <td>12.40</td>\n",
       "      <td>17.13</td>\n",
       "      <td>0.099</td>\n",
       "      <td>275.2</td>\n",
       "      <td>0.377</td>\n",
       "      <td>1264.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2001-03-02</td>\n",
       "      <td>0.000</td>\n",
       "      <td>3.03</td>\n",
       "      <td>48.8</td>\n",
       "      <td>14.69</td>\n",
       "      <td>10.00</td>\n",
       "      <td>0.065</td>\n",
       "      <td>281.6</td>\n",
       "      <td>0.134</td>\n",
       "      <td>1462.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id       date    NH4  BSK5  Suspended     O2    NO3    NO2    SO4    PO4  \\\n",
       "0   1 2000-02-17  0.330  2.77       12.0  12.30   9.50  0.057  154.0  0.454   \n",
       "1   1 2000-05-11  0.044  3.00       51.6  14.61  17.75  0.034  352.0  0.090   \n",
       "2   1 2000-09-11  0.032  2.10       24.5   9.87  13.80  0.173  416.0  0.200   \n",
       "3   1 2000-12-13  0.170  2.23       35.6  12.40  17.13  0.099  275.2  0.377   \n",
       "4   1 2001-03-02  0.000  3.03       48.8  14.69  10.00  0.065  281.6  0.134   \n",
       "\n",
       "       CL  \n",
       "0   289.5  \n",
       "1  1792.0  \n",
       "2  2509.0  \n",
       "3  1264.0  \n",
       "4  1462.0  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Sort the data in ascendind order\n",
    "df = df.sort_values(by=['id', 'date'])\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4035421e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>NH4</th>\n",
       "      <th>BSK5</th>\n",
       "      <th>Suspended</th>\n",
       "      <th>O2</th>\n",
       "      <th>NO3</th>\n",
       "      <th>NO2</th>\n",
       "      <th>SO4</th>\n",
       "      <th>PO4</th>\n",
       "      <th>CL</th>\n",
       "      <th>year</th>\n",
       "      <th>month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>2000-02-17</td>\n",
       "      <td>0.330</td>\n",
       "      <td>2.77</td>\n",
       "      <td>12.0</td>\n",
       "      <td>12.30</td>\n",
       "      <td>9.50</td>\n",
       "      <td>0.057</td>\n",
       "      <td>154.0</td>\n",
       "      <td>0.454</td>\n",
       "      <td>289.5</td>\n",
       "      <td>2000</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2000-05-11</td>\n",
       "      <td>0.044</td>\n",
       "      <td>3.00</td>\n",
       "      <td>51.6</td>\n",
       "      <td>14.61</td>\n",
       "      <td>17.75</td>\n",
       "      <td>0.034</td>\n",
       "      <td>352.0</td>\n",
       "      <td>0.090</td>\n",
       "      <td>1792.0</td>\n",
       "      <td>2000</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>2000-09-11</td>\n",
       "      <td>0.032</td>\n",
       "      <td>2.10</td>\n",
       "      <td>24.5</td>\n",
       "      <td>9.87</td>\n",
       "      <td>13.80</td>\n",
       "      <td>0.173</td>\n",
       "      <td>416.0</td>\n",
       "      <td>0.200</td>\n",
       "      <td>2509.0</td>\n",
       "      <td>2000</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>2000-12-13</td>\n",
       "      <td>0.170</td>\n",
       "      <td>2.23</td>\n",
       "      <td>35.6</td>\n",
       "      <td>12.40</td>\n",
       "      <td>17.13</td>\n",
       "      <td>0.099</td>\n",
       "      <td>275.2</td>\n",
       "      <td>0.377</td>\n",
       "      <td>1264.0</td>\n",
       "      <td>2000</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>2001-03-02</td>\n",
       "      <td>0.000</td>\n",
       "      <td>3.03</td>\n",
       "      <td>48.8</td>\n",
       "      <td>14.69</td>\n",
       "      <td>10.00</td>\n",
       "      <td>0.065</td>\n",
       "      <td>281.6</td>\n",
       "      <td>0.134</td>\n",
       "      <td>1462.0</td>\n",
       "      <td>2001</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id       date    NH4  BSK5  Suspended     O2    NO3    NO2    SO4    PO4  \\\n",
       "0   1 2000-02-17  0.330  2.77       12.0  12.30   9.50  0.057  154.0  0.454   \n",
       "1   1 2000-05-11  0.044  3.00       51.6  14.61  17.75  0.034  352.0  0.090   \n",
       "2   1 2000-09-11  0.032  2.10       24.5   9.87  13.80  0.173  416.0  0.200   \n",
       "3   1 2000-12-13  0.170  2.23       35.6  12.40  17.13  0.099  275.2  0.377   \n",
       "4   1 2001-03-02  0.000  3.03       48.8  14.69  10.00  0.065  281.6  0.134   \n",
       "\n",
       "       CL  year  month  \n",
       "0   289.5  2000      2  \n",
       "1  1792.0  2000      5  \n",
       "2  2509.0  2000      9  \n",
       "3  1264.0  2000     12  \n",
       "4  1462.0  2001      3  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Make the new columns of year and month\n",
    "df['year'] = df['date'].dt.year\n",
    "df['month'] = df['date'].dt.month\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "38e37a02",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['id', 'date', 'NH4', 'BSK5', 'Suspended', 'O2', 'NO3', 'NO2', 'SO4',\n",
       "       'PO4', 'CL', 'year', 'month'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Name of the columns\n",
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c599bd95",
   "metadata": {},
   "outputs": [],
   "source": [
    "pollutants = ['O2', 'NO3', 'NO2', 'SO4',\n",
    "       'PO4', 'CL']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "1bab12b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Correlation Heatmap of Pollutants\n",
    "plt.figure(figsize=(10, 6))\n",
    "corr = df[pollutants].corr()\n",
    "sns.heatmap(corr, annot=True, cmap='coolwarm', fmt='.2f', square=True)\n",
    "plt.title(\"Correlation Heatmap of Pollutants\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "40f17e7f",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "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cIATJ06QkpLCzz//jKOjozlPaa/H09OzWN6qNHbsWL744gueeOIJNmzYwL59+9i/fz/169cvtenff9+3ouKpMhsExsfHoygKbm5uJf777Nmzp9h/m4ceeghLS0tz9/qTJ0+yf/9+HnvssWLnA7jjjjtKnG/58uU3/G/dqFEjNm3aRIMGDXjuuedo1KgRjRo14rPPPrvha2jYsCEAERER192n6LFrP9SZMGECOTk5LFu2DCj8wCE2NrbE6ynr+wOlX1O36r/fD1D4PXHtNZifn8/8+fNLZLv77ruBsl1bReeFwnnuReLj40lJScHCwqLE+ePi4sznzsjIoGfPnuzdu5f333+fbdu2sX//flauXAmU/P61sbHBwcGh2DZHR0dCQkJo164db7zxBq1atcLT05Pp06dLo0khRK2iv/kuQgghqpPvv/8eRVFYsWIFK1asKPH4jz/+yPvvv49Op2PMmDFMmTKFRYsWMWvWLH766SeGDx9e7E55vXr1sLa2LlbsX6tevXrFvi5tjexly5ZhMBhYs2YNVlZW5u1FDbyKFBUU8fHxeHl5mbfn5+eXKJDr1atHmzZtmDVrVqm5igrrG7GysqJTp07XfdzV1ZXY2NgS24sauf33tZfl+XJzc0tsv3z5cpnOlZqaypo1a5g+fTqvvfaaeXtubi5XrlwpV5bKVK9ePTQaDTt27DAXbte6dpuzszP33nsvixcv5v333+eHH37Aysqq2AdHRe/NihUr8PX1LXeenj170rNnTwoKCjhw4ADz589n8uTJuLm5mUej/Fffvn3R6/WsWrWKp59+utR9ir5/g4KCzNtatmxJ586d+eGHH5g4cSI//PADnp6e5g+til5PWd8fKP2aqizOzs7odDoeeeQRnnvuuVL38ff3v+XzFzVEvN5a7UWjALZs2UJMTAzbtm0z312HwkaZpbneexQYGMiyZctQFIVjx46xaNEi3n33XaytrYtdQ0IIUZNJ0S6EEDVIQUEBP/74I40aNeK7774r8fiaNWv4+OOPWbduHUOHDsXZ2Znhw4ezePFiunXrRlxcXInO1EOHDuWDDz7A1dX1lv9Y12g06PV6dDqdeVt2djY//fRTsf169eoFFHaNvrbT9ooVK0p0hB86dChr166lUaNGpQ7Hrwj9+/fnjz/+ICYmptiHAIsXL8bGxoauXbuW63x+fn4cO3as2LawsDDOnDlTrGi/3t1wjUaDoiglirrvvvvutpYdu/ZOa0UYOnQoH374IZcuXSox1aE0jz32GL/++itr167l559/ZsSIETg5OZkfHzRoEHq9nnPnzpUYAl0eOp2OLl260Lx5c3755RcOHTp03aLd3d2dCRMm8M0337B8+fISHeTDwsKYM2cOrVq1Yvjw4SVezzPPPMPOnTtZvXo1U6ZMKfa9X973pzyu/d6xtrYu9/E2Njb07duXw4cP06ZNm2J3ySvC0KFDWbZsGQUFBXTp0uW6+xUV4f/9Xv/f//53S8+r0Who27Ytn376KYsWLeLQoUO3dB4hhKiOpGgXQogaZN26dcTExDBnzhzzEmLXat26NV988QULFy5k6NChQOFw3uXLl/P888/j7e3NgAEDih0zefJkfv/9d3r16sVLL71EmzZtMJlMREVFsXHjRqZOnXrDP74BhgwZwieffMLYsWN56qmnSEpK4qOPPirxB3mrVq0YM2YMH3/8MTqdjn79+hEaGsrHH3+Mo6MjWu2/s7beffddgoOD6d69Oy+88ALNmjUjJyeHyMhI1q5dy9dff423t/ctvpOFpk+fbp47/8477+Di4sIvv/zC33//zdy5c83D6MvqkUce4eGHH+bZZ5/l/vvv58KFC8ydO5f69esX269Ro0ZYW1vzyy+/0KJFC+zs7PD09MTT05NevXrxf//3f9SrVw8/Pz9CQkJYuHBhsSK3vIruRi5fvpyAgACsrKwIDAy84TFxcXGljuTw8/OjR48ePPXUUzz22GMcOHCAXr16YWtrS2xsLDt37iQwMJBnnnnGfMzAgQPx9vbm2WefJS4urthQ8qJzvvvuu7z55pucP3+eu+66C2dnZ+Lj49m3bx+2trbMnDmz1Jxff/01W7ZsYciQITRs2JCcnBzzqJH/fq//1yeffMKZM2d4+OGH2b59O8OGDcPS0pI9e/bw0UcfYW9vz++//16sIAfMI1jGjBlDbm5uiWX+yvv+lEfRf7c5c+YwePBgdDpduYvvzz77jDvvvJOePXvyzDPP4OfnR3p6OuHh4axevZotW7bcUjaA0aNH88svv3D33Xfz4osv0rlzZwwGA9HR0WzdupV7772XESNG0L17d5ydnXn66aeZPn06BoOBX375haNHj5b5udasWcOCBQsYPnw4AQEBKIrCypUrSUlJKTY6Qggh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5brTbjQaeeyxxzh//rx5W5cuXZgyZYoU7DXc2X27iDh8AK1OT/8nnpU12UWF8mvbAYf6DcjJzCBs906144g6Ij8vj8QLEQC4N5KiXQghRMWStdpFVSlX0W4wGPjjjz8qK4tQSW5WFlt/+B8AnYePxNXLR+VEorbRanW06X8XAEdliLyoIgmR5zEVFGDt4IhD/QZqxxFCCFHLFP3NLGu1i8p2S3PaV61aVQlRhFp2/fozGclXcHLzoMvwUWrHEbVU675BaHU6YsNOkxB5/uYHCHGbrh0aL6OHhBBCVDSXq3fak2MvUZCfr3IaUZuVe05748aNee+999i1axcdO3bE1ta22OMvvPBChYUTlS/+fDiH168BoP8Tz6K3sFA5kaitbJ2caXxHN8L27OTYpnUMeOI5tSOJWi727BlAmtAJIYSoHPau9TBYWWPMySYlLta8drsQFa3cRft3332Hk5MTBw8e5ODBg8Ue02g0UrTXICZTAcHffomimGjeozd+bdqrHUnUcm2D7iZsz05O7thGr4cew8LaRu1IohYz32mX+exCCCEqQWEHeW/izp0l6VKUFO2i0pS7aI+IiKiMHEIFRzeuJf78WSxtbOkz7gm144g6wKdVIM4eXiTHXuLUzhDaBg1WO5KopbIz0kmJiwXATe60CyGEqCSu3g0Li/boKOjSQ+04opYq95z2d999l6ysrBLbs7OzeffddysklKh8GVeS2LlsMQB3jnkUWydnlROJukCj0ZgL9aPBa1EUReVEoraKv7o+u5O7B9Z29iqnEUIIUVu5FDWjk2XfRCUqd9E+c+ZMMjIySmzPyspi5syZFRJKVL6tP35LXnY2Ho2b0XbAXWrHEXVIy9790RssSLwQYZ5zLERFi706NF6WehNCCFGZZNk3URXKXbQrilJqF96jR4/i4uJSIaGK5Ofn89Zbb+Hv74+1tTUBAQG8++67mEymYnlmzJiBp6cn1tbW9OnTh9DQ0ArNUdtEHD5A2J6daLRaBjz5HBptub8NhLhl1nb2NOveE4BjsvybqCRx4f92jhdCCCEqi7loj72EqaBA5TSitipztebs7IyLiwsajYamTZvi4uJi/ufo6EhQUBCjRlXscmFz5szh66+/5osvvuDUqVPMnTuX//u//2P+/PnmfebOncsnn3zCF198wf79+3F3dycoKIj09PQKzVJbGHNz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",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Line Plot: Pollutant Trends Over Time\n",
    "# Group data yearly\n",
    "df_yearly = df.groupby('year')[pollutants].mean().reset_index()\n",
    "\n",
    "plt.figure(figsize=(12, 6))\n",
    "for pollutant in pollutants:\n",
    "    plt.plot(df_yearly['year'], df_yearly[pollutant], label=pollutant)\n",
    "\n",
    "plt.title(\"Average Pollutant Levels Over the Years\")\n",
    "plt.xlabel(\"Year\")\n",
    "plt.ylabel(\"Average Concentration\")\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9be54ae7",
   "metadata": {},
   "source": [
    "## WEEK 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "77224729",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Feature and target selection - Feature - independent variable and Target dependent variable\n",
    "X = df[['id', 'year']]\n",
    "y = df[pollutants]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "fb19f232",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Encoding - onehotencoder \n",
    "X_encoded = pd.get_dummies(X, columns=['id'], drop_first=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "1a807abf",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Train, Test and Split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X_encoded, y, test_size=0.2, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "08134d27",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: #000;\n",
       "  --sklearn-color-text-muted: #666;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-1 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-1 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: flex;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "  align-items: start;\n",
       "  justify-content: space-between;\n",
       "  gap: 0.5em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label .caption {\n",
       "  font-size: 0.6rem;\n",
       "  font-weight: lighter;\n",
       "  color: var(--sklearn-color-text-muted);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-1 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-1 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 0.5em;\n",
       "  text-align: center;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MultiOutputRegressor(estimator=RandomForestRegressor(random_state=42))</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>MultiOutputRegressor</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.multioutput.MultiOutputRegressor.html\">?<span>Documentation for MultiOutputRegressor</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>MultiOutputRegressor(estimator=RandomForestRegressor(random_state=42))</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>estimator: RandomForestRegressor</div></div></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestRegressor(random_state=42)</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>RandomForestRegressor</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.ensemble.RandomForestRegressor.html\">?<span>Documentation for RandomForestRegressor</span></a></div></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestRegressor(random_state=42)</pre></div> </div></div></div></div></div></div></div></div></div>"
      ],
      "text/plain": [
       "MultiOutputRegressor(estimator=RandomForestRegressor(random_state=42))"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Train the model\n",
    "model = MultiOutputRegressor(RandomForestRegressor(n_estimators=100, random_state=42))\n",
    "model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "653aacbb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Evaluate model\n",
    "y_pred = model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "2599b873",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Performance on the Test Data:\n",
      "O2:\n",
      "   MSE: 22.861110802060825\n",
      "   R2: 0.007540039572995205\n",
      "\n",
      "NO3:\n",
      "   MSE: 17.765613544688055\n",
      "   R2: 0.5194041858679409\n",
      "\n",
      "NO2:\n",
      "   MSE: 5.692627739774803\n",
      "   R2: -7.247223037386126\n",
      "\n",
      "SO4:\n",
      "   MSE: 2688.4436530163603\n",
      "   R2: 0.31966744857823437\n",
      "\n",
      "PO4:\n",
      "   MSE: 0.4466762565622493\n",
      "   R2: 0.3512239952967634\n",
      "\n",
      "CL:\n",
      "   MSE: 34492.87945466878\n",
      "   R2: 0.730477204034535\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"Model Performance on the Test Data:\")\n",
    "for i, pollutant in enumerate(pollutants):\n",
    "    print(f'{pollutant}:')\n",
    "    print('   MSE:', mean_squared_error(y_test.iloc[:, i], y_pred[:, i]))\n",
    "    print('   R2:', r2_score(y_test.iloc[:, i], y_pred[:, i]))\n",
    "    print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "19f7034a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Predicted pollutant levels for station '22' in 2024:\n",
      "  O2: 14.18\n",
      "  NO3: 5.01\n",
      "  NO2: 0.04\n",
      "  SO4: 128.49\n",
      "  PO4: 0.49\n",
      "  CL: 64.78\n"
     ]
    }
   ],
   "source": [
    "station_id = '22'\n",
    "year_input = 2024\n",
    "\n",
    "input_data = pd.DataFrame({'year': [year_input], 'id': [station_id]})\n",
    "input_encoded = pd.get_dummies(input_data, columns=['id'])\n",
    "\n",
    "# Align with training feature columns\n",
    "missing_cols = set(X_encoded.columns) - set(input_encoded.columns)\n",
    "for col in missing_cols:\n",
    "    input_encoded[col] = 0\n",
    "input_encoded = input_encoded[X_encoded.columns]  # reorder columns\n",
    "\n",
    "# Predict pollutants\n",
    "predicted_pollutants = model.predict(input_encoded)[0]\n",
    "\n",
    "print(f\"\\nPredicted pollutant levels for station '{station_id}' in {year_input}:\")\n",
    "for p, val in zip(pollutants, predicted_pollutants):\n",
    "    print(f\"  {p}: {val:.2f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "19f8ca78",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model and cols structure are saved!\n"
     ]
    }
   ],
   "source": [
    "import joblib\n",
    "\n",
    "joblib.dump(model, 'pollution_model.pkl')\n",
    "joblib.dump(X_encoded.columns.tolist(), \"model_columns.pkl\")\n",
    "print('Model and cols structure are saved!')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2b5eaca7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
